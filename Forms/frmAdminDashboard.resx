<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAJBQTFRF////
        AAAA/v7+/f39+vr6BAQE9PT08/Pz7+/v4eHh9/f38PDw6+vr5OTkT09P2NjYJiYmy8vLLCwsu7u7hoaG
        tLS0rKys0tLSoaGhjY2Nf39/MzMzWVlZGxsbRkZGQ0NDv7+/FBQUampqdHR0Ozs7lJSUcHBwkpKSYGBg
        rq6uVFRUERERGRkZo6OjISEhenp6829YVwAAGQZJREFUeF7tXAl34jizVUmysY0XDBib3SwmLAH+/797
        55ZkMCTdM/OFZKbf8T2n0+ANlapUuyxEixYtWrRo0aJFixYtWrRo0aJFixYtWrRo0aJFixYtWrRo0aJF
        ixYtWrRo0aJFixY/BymVklJKYf7yAan4jOKPfPCPhtIaxAkFMGFaa1DFB/4fUCiZDnxS2lAoVaDtd6GU
        MAz9gyG1Um6UZufxW6CZQnGI3/BBSd1lUv88SCW05RsLZ7AnYB4yB4Ubk+PhjEwui+u5jFhm/yhAfyit
        dDIaGkrXFE+qURpoKYUUKRENQKFIp0z6wpMsv38QtBQdpfSUKIEqFRPKcBhaReLbhiZCS6m1lyxoto07
        2nD8j4FS6f4yEmJJdBbQmxVVfnoouhqMC/uraLXtKCU1vvRcHWr5hwmqFCOirScWK1prqaTIyIE0JjAO
        YkATMaNEKEhsTrG1i+ZGqQL+7z9OsBQRnagSs/724mGwKc2P17eDpyCNe7oe1lQYOgZ0bdynlDgsz4a9
        /+mFqZQ6rrbzcDfdUAk6Ijq6CoZDK5WcWLvMNLs4YxqJGy0w/leifuXzev0vAyOf0Hh4yWgopJSh02PD
        p5VUBa2LanhaRayDZpSKm0TCOXDTI9HqGv2neGhHeF86UsuUJrvV2kl7U/CqM11Vw/22HynV2VIuYD8y
        5tll7t+5BQplsKd1j9I7Z/8DUFJpFZXWxhur7vW3pXOidE0+LF/MktlPpPLXGy2UGNFGKCUjWgQNbkER
        pbQIoiyARWWa/wteDwjUe0rvvJBCXSm9EqUjqvC1mBRZ7oeaHQGsv8BnOUxprRqGAk7qGisT3rlSiaeU
        /i9QyKplQMdO/ZV1IlU+0cBfjkzMZMYv6vGCVBCa+CbgsEelSGjVAXlaKX91zOGa//twq8IVGnNvAQp9
        iuVkkUuXoyOmMXBdr+uFXtjtdruBCaQQXTQo1GJCb6AOWBM5lQlD/iXYcE8ciBal8FcXLDkTJwmhN0PX
        GgChgiQbFZNFf87LkYhO8+m6GmW5h/Ezk7GKpZbR/N3HZ6XFgZbFio5hQ4X9NHhVgTfQI9fwTNc6EgQC
        LDkhZCcdrxfs0nyC7XqShaASj4JWKfgh+Oj3qRT5goaPP/qTgN9hRCil05R6xeJBx8MH7aTn+MY3chbx
        4niczfazeLGcXurDq2lVhsxFrd0jpZg5pfSGprkQZ1o3fvKnoZUOjDs5oUlF1KNFpxEjBOlwe6MOXkzu
        BgHrEB0EHS/MR+Pr0Tg4NL0OXOjkIBpwXkOzK3uq0gW7d/8OIJCjXYdXUdgjP5kRUQXfjEcUFUtL2fv2
        Wo1HWdqxMsxstvpV+2mxMNzcDhMNucCDtfJ6lFU4HHcthWZFPwzhOwF7JYMxUSo5CMpor0U2pbijAhiB
        dGdW3mVfJOHNinwOGWa7heHy2TNrEDK6EclpOalMngO2RcPuPt/8bcCPdTd0KqWA3El3T5kS4SiC/g9K
        dmFO6yz1MaY6nfgZOB0gdLccvuOexcFjPvr9SyRyJ9bWHjL3ZfCT7rjW0Yy2uQhGEafQEupHmn1pPWL6
        llUETcrk/cZqm9gQ89AdQcxpevYwfX4KBbaE8cdlSkUVfINfP+i1kFAFEzolwtvQjqVKjC8pe28pj7M3
        6Bjeac7YfDawmqcmGMTgdbrjuTkEkienpGNtfrpVj5bhT1GIMWulwpg24ZH6OeiVqhMipIuurB1OdIB/
        8jt35C61+GC/6GTD6zFlH7ykPdtcoTJorWP3p0J/EAjBi7Z0omMkpZ9gHFoLt8JiisvgSDQO5O+c5tqT
        ewDMq19ACIYhfiar8AyFZT3cUwZyn2/5FkBvsMZLThR7SiXTS4SjIlljHRUe7DTRpPs7vQAKP5AotdZK
        6HJJtE2xfKE88dR9ntC2++DCfieUjBKhkB4r6TQQ5YXWXaWlGq1g1SLo2Qh50Bnc1L/CE5lYs1J4mKqJ
        i3UcTBxa0Sy8UgEWfz+FYJ/oxCtENewcX8ZEY0iPxyuQaBIgbwYmUj/lOlPzfs6YSik66dtmvRmX0EfI
        EpvjfAWIDqByZgm4eO4V/p62qzl74KaQ1Xziq8Fa70om+6KUHBPBrZLCh83m5P26gyGCC3QqYCub90Pd
        KhGca38nLpJAcAT1aDLdzCGaZ0KpwFMSPB0zu/n+76QQPyDf6ELLDlMY6OtpgLg1ewfL5Bp50W0ulezM
        yHGI1v6TFCqlwqpvyDNuT38zCExt8U4hbD6samW8WOGfVkjnMPcz93spVDIjSqeUsMBoHbK8FlDmiZB+
        H3TNRxjhlknon5/G44M+Q5vjOObTovARHd4XGWTbg+G4IsWq1ZsJzKQQ/ozOD897NbSM3ikTGzqbOi7b
        DT3E+utAyWaGO2tfCEMtUYn7QCYc53wIdfQRp9k5qW0Lr0upBM9bHCKAPlIO3SZk2SOi9DNL8yoEKhgU
        SNqvlVTVObBeMoIK4zEPmTN0GaXXFSh0KMF9nOANB6bK9gHMSGc5TkEOrASXjHWQrogWvtAimUABiM4b
        0bCgLfzz55G9CFyBV1okNA0RwflaaRdK9My+mdaqM4P02YGzGIauF0Z+5JdXRItWLp9Q3zFdH3zNKStw
        UYu8x/YHjp2WMtoTjbS7pzM7st8DWCj83oLylCiTWkGxzwdsq8FDHTKJjqHPcei0nPbea6r4cJO0T7BA
        nGjzGiKZEm19FWitddmnRcKp1sk36VM81HjJUgzpuqVCaKGvRKvSFOu5Liq7xjCCfbUmAab4BAqb1GAF
        9haz9fW62y96t1M732hdrSUU1jLCeq+INqGQUq8hMd9CIcef3DwBp5hoAkmCkkkbsTdr2+PNFDD6+PyW
        vFkjcTscT4pBHhqTCWmI0qzabZHXOJ1NyVQqJvHoSRipnofHD2kaflNBFavMczEWLbwl7V2lREXkZCYd
        aCFV0l9XoPGGPBmeiCoRFsulzVis3waJ5yJFzE4M20J+iHbDtLjGtA5t5CsSMLWrlV7TuquTPUTme3io
        RFBte9tJArsv/F0oDCsPdZLUAPVB6g9rqw5mDoVMxnPkcDwvLIdvWeJp4UW7vW1o4DqbqaeZIFe6UcY1
        Ahb+kUP0JpQMtxSvVzRNOavQHNqLIN01EcY97rDbjwLuhajglp8GE2HFiC6clLBAktHLM5ezvizS6WLm
        cB7Z+muGNt+HFuX+DThKNhQV6Ym4ypgsMHecAvgeazGgaRrmQweVaw5kvCVBrZmx4AqUIrzps7p0UB61
        nTR8nVYC/ixtJ40qITz67epcusxGtKLwUWbthuiUSiW6eQ7TwTotTV5v9vd0wPynfQQycEo3RLOu7VFj
        gI6wyTxLIY3R+lVfJRXKi0TOHjW0273IWtCmt2GLf3skPzWEzeACgIm/lfSvFAfNi16CIw0QBogSwagW
        ekTUi3hC6yuQzrB+2yOFNJDBbemAR9ali++OuUTHBm3puMmfsh9KSvhCG1hcTs3JsDpR7/z6mk2FnKjS
        IpyeoGWSFff9YErtBVhO+qNjBrO4Qubl9qTu8GI9nj7apPhehRK+Q7SiXvK4yHSgss2KG1dYZoPDlGjo
        I23yYoRb9qhFTtuuUvrIUaLpATIrBgriiYVmSeIPomEOkjpCd5PiZC3mzDVaCo1inKVDoi4RzWgejVSQ
        4HnOHnm5MJ49FyBfajUkvMTLuBxtqVIaHTPLbuMXmELWrg8EMokOXcaXEmtRi0OKvOF1wS6qQ7PSVLml
        Uq4phTt0eUND1eNahGuxFkp1dkTHMjAVVniJzau+CNTqOXKnmauU3yNqVO6N1mM38pFCy8VKxFQglXaY
        BVIr6aVD49VViL9YY6quqeM4zoVzMg+iKmV3ikWh9G46An1wjrl1tXnVF8HNMPl4vRthhq9EHNE88NCf
        fnA7Ec/Nd6lKF/v5Og0GVDI1SrM2dajv3xYoaDAH34vA9NjeoJUcEG1DrbyQFTnmJSw7r7GL1iBbf4O5
        CW3fj+6VEl5JIlk+m0Lq+dmu8qVQXldEk/mWFgiZAZu4on0eRWHoeV4yNPciHpn6z/kdDY/bRqGm9TYZ
        T1m5fx23rDxHgFAnWukY3loNjjf0BxEFdo0HSREWGyQ9QOO4jnvxbzWfXx4XcP6JOU/eCdkajRA1OrBa
        yl7Ri8JdPCIdVimHM/xHDIgW3dsYeGLlZwTSBqulvgzlQZ4lNM18jKOa30tWoE8YE9I1Ugf5EJGxA433
        Agq5XwIDosIsOy2le0T6pUmhFilW3AfMmukl0/HNwl48hMI3bt7A3XBN4Gt0oVUidAeu/VsZ05BbHb8O
        9EXMaDOev/vaT0fwDzOiWaOVCWMuP88wTbmphGHWHxttxOnGjnwKZ97n3swnSMzLRGl53Wddd09rJTrl
        K1w3ZAap3xFDmqDroBRaxo+TDEP/OYH07pk5wmW2VMH57fyZaQ04tCiCz6IHFfVpFQnpBkJeadZJqq3J
        5H0NmPEC8Rncscty0uGocMbVpxpKP7QkNHAqDmWaPNk2sDL+JYVg7tFEVI9Q7LkO2Yka0/Q8I5pfOZP3
        RbCzMfT9y3uR+wFYuiHKmHILqQJTh/8AEHEtRugtvQPJa7hEv6AQxw+mL+ERUiufaAprPCJ6J4rP/ius
        hZQyWhKdtjTWkDAt/Hd2TO9DkFp9jChumA6svquv5/DZ2/6Gwr5pJn4C5vTKOYXoQnSZpCjyv4BCjEyn
        wynRZZchBYRUNBdj7lBCc2eIGV8T3C4Tvw18rwMnCwE8mwuF6lQzFXcDjoxvEfADjFJfK603s4PHlvol
        utSk473y6hD1SqGDmN6f6i3I1GQw2awfY2u8L7O3QTKovyxnY8+kIjmEl91F7Zc/UMcHPl9cWJrBjPvh
        u4Fxo15jLQB+UDdb9xLeD7JAT17jLAdQ0Y7Ht021G/p5noSsyJW/vPG1X7KzbKiEOq398iaN03GWf27G
        +WfOECBIkiXvdRQaYx9qJIORnHk4i5/WQmdT6o19RKx81Po6Ye2BotiWJcaAgR9IWX0gEI16v9p8gSGE
        K1og62NXyecX/jPgGabNnv9T7hJe49PUoR0DOmgQ2e5eDnet/8I1JDt+OvWX8Ww/GflCymr97Og5Dm1d
        sOjx8TdIziEkrGGUP7rudyOsx19d/vegZJ640KH8GLPWfx1ac+lCizDBlh9Tq1GBKFEyfGTXKhNKdkpb
        gauBL+hN/NXjhYA/NYbOcU0TFW1z2z74P0MF04svO7bpUKqzyV1+Cq5qaK3Oh1B6tlSDpqHP4qpL6ft5
        mMQPgurQfOz9ro6NTTY0Q3ZoQ7Q7pIMZLeE2fQnRadlR16nVb0FMvejZLa7BaQUv0O8H4R4LEYZuJER6
        vA78wcfYmJwTLRforb2dcTg//tuuGamWtErgV/WxqUFINLV+Ppq/jZTWorugyORzwz4tg19SKINinI1H
        06TyJu9v8a5cZLYp4ZmFHw/g2AoBZXSPPG+q5PZ7bPRT7FgpROB78N/OX6Uwo7EIT9MuapRsK4Y2TuRk
        EP/PWTaIbmhyif0lzdmPa1Dx0TJ8Aocuk1E1HxUJqpRWVfHv1ERy3viMWHEkRjAcRzr8huV/C2Najiua
        oc9TKvHGSVIOhNkWaKUjL9fdt9FhkKdriscVt999tASfU/hg9e8f94ttvI9R7zA03kbDZYM4EBnFbkob
        NaH5s/vxT6Em5me3s+Eo0GJNlOrcBWk8wUEULZer/QTu2XuPqnS4zrJfUPOXwE22sgp1OxpsjuMul2pu
        YC9/6gmvT3FMW32el1/2a4IoGYzXXPgLpdzSNhlHMI5BqEIh0rnVITyqEZu+MzcY0unS60/jzXBcHAZl
        meZ5nviJb5EkeZqWg8FhdB7v4u20P7cd34ZSx6E45cdUwku9exSolNrR3LhW1J+5bvjlfj6rVHSUZyMt
        IqJ1spedbFwcqmx4vlqbbZzoyrgpcXncT85p4kdhp/njv5Qm6YaRn6Tn4W62qJMhs/zITN0nk3257Ho+
        XFGW2JFJoaSD3FRRPwkl/znsM9jeD4trsZ5cifZbw7zbituX5tupLkbwrfYBHNN+HAo7qcgC8CklVJiX
        o/G6t8ihqhyHdgWqlrP9JjnwVnBO8L/9Spt/DVjwGVE8nZp53m8byZbpYnPIYdcdh6bcj/4wBjRV2lLo
        I0znjCk9GvXJlwcRuwIOUbEj6jk0jYcUn8s0LLsJ0dWk2F8Ns1+Lf9c0ktRYDovUc7V4s5qxgtJ99EsU
        pOwmCw8Is+FmPDAUsuWBk6t39lmL9FFn9amokML7jq3C/Puo3RoCjWj24kmKjnUIGFoKHKIlSi+3Eq5R
        f+jynVf6SUo55rKZbt7DZ8IUyMqbmcn+qKPCvDryam+Q2jfz8fC0rwMhEgKLuw1bTkYRIkUeG3olcHiO
        Tob6Hi6gKN/WFJvOB9+ixACNAXjYPeQEheiAwMNSc2knHAxtdwcbFKJQ6PD1FVKldLCgk3Hpe8si4Uwh
        4hj8L6FmHIcKzofWt0CTp3VbRj+6z7rZGsO5fSMMqEwC3A9vQw6zIcg4TW5ymJn1j1/JgqoUr8iVNgHO
        5Ce69IlO+zMP1ng2ZkHY6t8WDdG3yeWCQO9m/xsOJxRF53rXxP3ofg8ayXDL2rYNmQWKAHy0s0mR3TUr
        jK14IaQbakgPbc+cZrDJiLoGzDoIacZG2RuzklzuGnfT9L6Enhh+MGZ3vkNhg7MXdCWaS82besBKnxuu
        6DTd01Mx/GvgZT2gmKh35aDlEabJBPO+fy7dRkvrc4OS+HYCWck3wymjtPi9GXxGhnMrib/YIZtMTP75
        dssrgNwE1wwLuLnPahqstEmX9FGHK/R7g7YVk7lt3jOwrhAT2MhtcaucldGPFPK6DzMsiUZt6AWQSnr7
        OOswNR9PQjdgrA0xNOAak0P9MxMSN271ew3mIuKrkZpbeiYb8wTeOKyxeWxPU7TMvwooD44HAauOjxQK
        Dqow2uQpTYYCDDn0np951Lv7kPTecG8BRXtC0qY+cTSLEy9FsRQ2H3lLuepyn73QsZEyTOodx588U4XQ
        4w5NmolAxS8T4uMHlFSg/e0T6q4Uh5Zhvrgc0WyDU1id9gReRFBT+GFWDWE6ij6pbvyvMBvofgHkFCBs
        F7zq4s4l7s0ExkLk4FfftzyRyjUxSR87bDzOPTIUayxwNUcAKjr5eXzOtXm/1Ec0OyW+CPaKnw/egUoJ
        U4KWs/qgUr5xDhYd4RZz3kJjI4hbYxF6E/lVZ4ZEqdAJbB8lRHQ2Ja3sF82WJl55DZDw/c2zzLAuEXIa
        t8ukhFLkbigfvd+mYMVnhNywxeOqvPHsjJSKyLgtW08J17SoIhZGr+4nuM3Mi/Dps9gOh8a5NBUje5mU
        Co1vDpqlsUkCGjOzD1EC9UZ2O2t3xfrdYmJUayn04F50df7OFrFvA7xSk7VfRc1h8Mt1wIBTOKpHarYu
        4VwXHrxDb9gJzu8lsGcitLs5tBahSYRYfEMr6d8HdjmbbT7Y7HU/LoV3YUl8Y9+MB7qrtbHi8A+CPUw7
        CCXrGyfWFKItwLpzUDu1V/6vgHeqYzTz5GGl8tsyHIcu3LdvRru2FJpXY9Uh2Ftyy2748GGJhsOGw/oQ
        Wf00OPOiAuxSc/iFOihOseRiGSJcNMOsR7u/8ZC9OT4F8d6E1sTxrkVy2LjizLvR0cPfbij+Rpi8St3e
        xO1cVnPgNTTdRrO+/RNbRcs70zgqtnyCHUHQdet3MHOyT0xE9tB9+6Mwe6CMozwzvLOm026TsKMlMrFr
        76YTERzeKv8gMYSX7d8POLyrBFEG0QUp0aef/iFwNihCgOvQcDAYpHnkKsHNhyZjW6Oy7b9Dy0PT6+iP
        azbD0pi48HaA24DtLA0azXE/hJuhVdEA4dFNKTjTa2n3sbLTbXDgpjugji0D3gcqvcHQWHUoIbSC3XAq
        4K9YCvnNPj8K7tQTOskmi0YqvsbO5YbBDvZdgPQlOuESU43IeKi66Pc2g6TTjdLK5syvnJa6zdUM6Syp
        unOjrd5+mEKELng5yyfUMYam6dPInDPxOHsGq1i3kRz4zKl/f6kS91jB3vOk9NHnzB3ObDYQSf3sOkSY
        YfJnTaNVw6F3ZKmkVOmst53krFwRP+O1VmY9bT7cGGOjEXtB4CfaHUxZzeP1Owtf6n7+NdB0brIyjRXY
        BCpFeDeIQM3RUKhlkKR1dRw7aWtLwX+PEbd6KJFXmyrhvI9NgQdpUeTBV6tL/xh40+PdqcJop9dhVVWT
        NTaKEOWmz5IdgvptAjZu4r/JO192YyQLst2hZ1Tt/W7+vZ82h3BJID1Mmqkecm4aY4fdO7p/pdxvOWKY
        wklyH/8PU/IrwBxEvED6ZcBvwFgEZv+KVvk+3qB++lto3R1d18dFvJ8U7Hk/X/Bvg1sw3WyzG/sikMl+
        uUs4hOVXEATQGb+nEL1E2Ivuunjd7DdUWL4MjMm2byPfLZGC4yCdaeQ8+PMtT+A37xr8RX7k34QdFqj5
        2gi/dneLFi1atGjRokWLFi1atGjRokWLFi1atGjRokWLFi1atGjRokWLFi1atGjRokWLFi1atGjRokWL
        Fi1atGjRokWLFi3+TPwf0UtPdFp7IDQAAAAASUVORK5CYII=
</value>
  </data>
</root>